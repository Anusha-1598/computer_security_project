{"ast":null,"code":"var _jsxFileName = \"/workspaces/computer_security_project/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DOMPurify from \"dompurify\";\nimport { useNavigate } from \"react-router-dom\";\nimport { setLoginUser } from \"../redux/loginSlice\";\nimport FormInput from \"./FormInput\";\nimport Button from \"./Button\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [errors, setErrors] = useState({});\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:5000/verifyUser\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user: localStorage.getItem(\"user\")\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(res => {\n          dispatch(setLoginUser(res.userId));\n          let goToDashBoard = () => navigate(\"/dashboard\");\n          goToDashBoard();\n        });\n      }\n    }).catch(err => {\n      console.log(err.message);\n      // alert(err.message);\n    });\n  }, []);\n  const validate = () => {\n    const errors = {};\n    if (!username.trim()) {\n      errors.username = \"Username is required\";\n    }\n    if (!password) {\n      errors.password = \"Password is required\";\n    }\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      fetch(\"https://fictional-space-acorn-9xg4qqjgqpghr96-5000.app.github.dev/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          password: password\n        })\n      }).then(res => {\n        if (res.status === 200) {\n          res.json().then(res => {\n            localStorage.setItem(\"user\", res.user);\n            setMessage(\"Login successful!\");\n            dispatch(setLoginUser(username));\n            let goToDashBoard = () => navigate(\"/dashboard\");\n            goToDashBoard();\n          });\n        } else {\n          res.json(res => {\n            setMessage(`Login failed: ${res.message}`);\n          });\n        }\n      });\n    } catch (error) {\n      setMessage(`Login failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"username\",\n        label: \"Username\",\n        value: username,\n        onChange: e => {\n          setUserName(e.target.value);\n        },\n        error: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: passwordVisible ? \"text\" : \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: password,\n        onChange: e => {\n          setPassword(e.target.value);\n        },\n        error: errors.password,\n        toggleVisibility: () => setPasswordVisible(!passwordVisible),\n        isPassword: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        label: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"g5Wchhz1hqWmthjpnyr9+7P9WRI=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","DOMPurify","useNavigate","setLoginUser","FormInput","Button","jsxDEV","_jsxDEV","Login","_s","dispatch","errors","setErrors","username","setUserName","password","setPassword","message","setMessage","passwordVisible","setPasswordVisible","navigate","fetch","method","headers","body","JSON","stringify","user","localStorage","getItem","then","res","status","json","userId","goToDashBoard","catch","err","console","log","validate","trim","handleSubmit","e","preventDefault","validationErrors","Object","keys","length","setItem","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","label","value","onChange","target","toggleVisibility","isPassword","_c","$RefreshReg$"],"sources":["/workspaces/computer_security_project/frontend/src/components/Login.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setLoginUser } from \"../redux/loginSlice\";\r\nimport FormInput from \"./FormInput\";\r\nimport Button from \"./Button\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const [errors, setErrors] = useState({});\r\n  const [username, setUserName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://127.0.0.1:5000/verifyUser\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ user: localStorage.getItem(\"user\") }),\r\n    })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          res.json().then((res) => {\r\n            dispatch(setLoginUser(res.userId));\r\n            let goToDashBoard = () => navigate(\"/dashboard\");\r\n            goToDashBoard();\r\n          });\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err.message);\r\n        // alert(err.message);\r\n      });\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    const errors = {};\r\n    if (!username.trim()) {\r\n      errors.username = \"Username is required\";\r\n    }\r\n    if (!password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validate();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n    try {\r\n      fetch(\"https://fictional-space-acorn-9xg4qqjgqpghr96-5000.app.github.dev/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: username,\r\n          password: password,\r\n        }),\r\n      }).then((res) => {\r\n        if (res.status === 200) {\r\n          res.json().then((res) => {\r\n            localStorage.setItem(\"user\", res.user);\r\n            setMessage(\"Login successful!\");\r\n            dispatch(setLoginUser(username));\r\n            let goToDashBoard = () => navigate(\"/dashboard\");\r\n            goToDashBoard();\r\n          });\r\n        } else {\r\n          res.json((res) => {\r\n            setMessage(`Login failed: ${res.message}`);\r\n          });\r\n        }\r\n      });\r\n    } catch (error) {\r\n      setMessage(`Login failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          value={username}\r\n          onChange={(e) => {\r\n            setUserName(e.target.value);\r\n          }}\r\n          error={errors.username}\r\n        />\r\n        <FormInput\r\n          type={passwordVisible ? \"text\" : \"password\"}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          value={password}\r\n          onChange={(e) => {\r\n            setPassword(e.target.value);\r\n          }}\r\n          error={errors.password}\r\n          toggleVisibility={() => setPasswordVisible(!passwordVisible)}\r\n          isPassword\r\n        />\r\n        <Button type=\"submit\" label=\"Login\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}