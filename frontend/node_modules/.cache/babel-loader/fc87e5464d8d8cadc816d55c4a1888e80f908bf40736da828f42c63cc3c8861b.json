{"ast":null,"code":"var _jsxFileName = \"/workspaces/computer_security_project/frontend/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DOMPurify from \"dompurify\";\nimport { setLoginData, resetLoginForm } from \"../redux/loginSlice\";\nimport FormInput from \"./FormInput\";\nimport Button from \"./Button\";\nimport \"./Login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const dispatch = useDispatch();\n  const loginData = useSelector(state => state.login);\n  const [errors, setErrors] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const handleChange = e => {\n    const sanitizedValue = DOMPurify.sanitize(e.target.value);\n    dispatch(setLoginData({\n      name: e.target.name,\n      value: sanitizedValue\n    }));\n  };\n  const validate = () => {\n    const errors = {};\n    if (!loginData.username.trim()) {\n      errors.username = \"Username is required\";\n    }\n    if (!loginData.password) {\n      errors.password = \"Password is required\";\n    }\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await fetch(\"https://example.com/api/login\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: loginData.username,\n          password: loginData.password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"Login successful!\");\n        dispatch(resetLoginForm());\n      } else {\n        setMessage(`Login failed: ${data.message}`);\n      }\n    } catch (error) {\n      setMessage(`Login failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"username\",\n        label: \"Username\",\n        value: loginData.username,\n        onChange: handleChange,\n        error: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: passwordVisible ? \"text\" : \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: loginData.password,\n        onChange: handleChange,\n        error: errors.password,\n        toggleVisibility: () => setPasswordVisible(!passwordVisible),\n        isPassword: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        label: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"6j/yLrcCCc2IojJQUdrZZ7xbL5o=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","DOMPurify","setLoginData","resetLoginForm","FormInput","Button","jsxDEV","_jsxDEV","Login","_s","dispatch","loginData","state","login","errors","setErrors","message","setMessage","passwordVisible","setPasswordVisible","handleChange","e","sanitizedValue","sanitize","target","value","name","validate","username","trim","password","handleSubmit","preventDefault","validationErrors","Object","keys","length","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","label","onChange","toggleVisibility","isPassword","_c","$RefreshReg$"],"sources":["/workspaces/computer_security_project/frontend/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport DOMPurify from \"dompurify\";\r\nimport { setLoginData, resetLoginForm } from \"../redux/loginSlice\";\r\nimport FormInput from \"./FormInput\";\r\nimport Button from \"./Button\";\r\nimport \"./Login.css\";\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const loginData = useSelector((state) => state.login);\r\n  const [errors, setErrors] = useState({});\r\n  const [message, setMessage] = useState(\"\");\r\n  const [passwordVisible, setPasswordVisible] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const sanitizedValue = DOMPurify.sanitize(e.target.value);\r\n    dispatch(setLoginData({ name: e.target.name, value: sanitizedValue }));\r\n  };\r\n\r\n  const validate = () => {\r\n    const errors = {};\r\n    if (!loginData.username.trim()) {\r\n      errors.username = \"Username is required\";\r\n    }\r\n    if (!loginData.password) {\r\n      errors.password = \"Password is required\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const validationErrors = validate();\r\n    if (Object.keys(validationErrors).length > 0) {\r\n      setErrors(validationErrors);\r\n      return;\r\n    }\r\n    try {\r\n      const response = await fetch(\"https://example.com/api/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: loginData.username,\r\n          password: loginData.password,\r\n        }),\r\n      });\r\n      const data = await response.json();\r\n      if (response.ok) {\r\n        setMessage(\"Login successful!\");\r\n        dispatch(resetLoginForm());\r\n      } else {\r\n        setMessage(`Login failed: ${data.message}`);\r\n      }\r\n    } catch (error) {\r\n      setMessage(`Login failed: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <h2>Login</h2>\r\n      {message && <p>{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <FormInput\r\n          type=\"text\"\r\n          name=\"username\"\r\n          label=\"Username\"\r\n          value={loginData.username}\r\n          onChange={handleChange}\r\n          error={errors.username}\r\n        />\r\n        <FormInput\r\n          type={passwordVisible ? \"text\" : \"password\"}\r\n          name=\"password\"\r\n          label=\"Password\"\r\n          value={loginData.password}\r\n          onChange={handleChange}\r\n          error={errors.password}\r\n          toggleVisibility={() => setPasswordVisible(!passwordVisible)}\r\n          isPassword\r\n        />\r\n        <Button type=\"submit\" label=\"Login\" />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}