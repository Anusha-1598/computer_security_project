{"ast":null,"code":"var _jsxFileName = \"/workspaces/computer_security_project/frontend/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DOMPurify from \"dompurify\";\nimport { setFormData, resetForm } from \"../redux/registerSlice\";\nimport FormInput from \"./FormInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport \"./Register.css\";\nimport { setLoginUser } from \"../redux/loginSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const dispatch = useDispatch();\n  const formData = useSelector(state => state.register);\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n\n  // useEffect(() => {\n  //   fetch(\"http://127.0.0.1:3658/m1/593636-0-default/verifyCookie\", {\n  //     method: \"POST\",\n  //   })\n  //     .then((res) => {\n  //       if (res.status === 200) {\n  //         res.json().then((res) => {\n  //           dispatch(setLoginUser(res.userId));\n  //           let goToDashBoard = () => navigate(\"/dashboard\");\n  //           goToDashBoard();\n  //         });\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       alert(err.message);\n  //     });\n  // }, []);\n\n  const handleChange = e => {\n    const sanitizedValue = DOMPurify.sanitize(e.target.value);\n    dispatch(setFormData({\n      name: e.target.name,\n      value: sanitizedValue\n    }));\n  };\n  const validate = () => {\n    const errors = {};\n    if (!formData.username.trim()) {\n      errors.username = \"Username is required\";\n    }\n    if (!formData.password) {\n      errors.password = \"Password is required\";\n    } else if (formData.password.length < 6) {\n      errors.password = \"Password must be at least 6 characters\";\n    }\n    if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    return errors;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: formData.password,\n          confirmPassword: formData.confirmPassword\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"Registration successful!\");\n        dispatch(resetForm());\n      } else {\n        setMessage(`Registration failed: ${data.message}`);\n      }\n    } catch (error) {\n      setMessage(`Registration failed: ${error.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        type: \"text\",\n        name: \"username\",\n        label: \"Username\",\n        value: formData.username,\n        onChange: handleChange,\n        error: errors.username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: passwordVisible ? \"text\" : \"password\",\n        name: \"password\",\n        label: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        error: errors.password,\n        toggleVisibility: () => setPasswordVisible(!passwordVisible),\n        isPassword: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        type: confirmPasswordVisible ? \"text\" : \"password\",\n        name: \"confirmPassword\",\n        label: \"Confirm Password\",\n        value: formData.confirmPassword,\n        onChange: handleChange,\n        error: errors.confirmPassword,\n        toggleVisibility: () => setConfirmPasswordVisible(!confirmPasswordVisible),\n        isPassword: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        label: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"CFfu0nEWOIW6T19AVztWRRqqIqo=\", false, function () {\n  return [useDispatch, useSelector, useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","DOMPurify","setFormData","resetForm","FormInput","useNavigate","Button","setLoginUser","jsxDEV","_jsxDEV","Register","_s","dispatch","formData","state","register","navigate","errors","setErrors","message","setMessage","passwordVisible","setPasswordVisible","confirmPasswordVisible","setConfirmPasswordVisible","handleChange","e","sanitizedValue","sanitize","target","value","name","validate","username","trim","password","length","confirmPassword","handleSubmit","preventDefault","validationErrors","Object","keys","response","fetch","method","headers","body","JSON","stringify","data","json","ok","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","label","onChange","toggleVisibility","isPassword","_c","$RefreshReg$"],"sources":["/workspaces/computer_security_project/frontend/src/components/Register.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport DOMPurify from \"dompurify\";\nimport { setFormData, resetForm } from \"../redux/registerSlice\";\nimport FormInput from \"./FormInput\";\nimport { useNavigate } from \"react-router-dom\";\nimport Button from \"./Button\";\nimport \"./Register.css\";\nimport { setLoginUser } from \"../redux/loginSlice\";\n\nconst Register = () => {\n  const dispatch = useDispatch();\n  const formData = useSelector((state) => state.register);\n  const navigate = useNavigate();\n  const [errors, setErrors] = useState({});\n  const [message, setMessage] = useState(\"\");\n  const [passwordVisible, setPasswordVisible] = useState(false);\n  const [confirmPasswordVisible, setConfirmPasswordVisible] = useState(false);\n\n  // useEffect(() => {\n  //   fetch(\"http://127.0.0.1:3658/m1/593636-0-default/verifyCookie\", {\n  //     method: \"POST\",\n  //   })\n  //     .then((res) => {\n  //       if (res.status === 200) {\n  //         res.json().then((res) => {\n  //           dispatch(setLoginUser(res.userId));\n  //           let goToDashBoard = () => navigate(\"/dashboard\");\n  //           goToDashBoard();\n  //         });\n  //       }\n  //     })\n  //     .catch((err) => {\n  //       alert(err.message);\n  //     });\n  // }, []);\n\n  const handleChange = (e) => {\n    const sanitizedValue = DOMPurify.sanitize(e.target.value);\n    dispatch(setFormData({ name: e.target.name, value: sanitizedValue }));\n  };\n\n  const validate = () => {\n    const errors = {};\n    if (!formData.username.trim()) {\n      errors.username = \"Username is required\";\n    }\n    if (!formData.password) {\n      errors.password = \"Password is required\";\n    } else if (formData.password.length < 6) {\n      errors.password = \"Password must be at least 6 characters\";\n    }\n    if (formData.password !== formData.confirmPassword) {\n      errors.confirmPassword = \"Passwords do not match\";\n    }\n    return errors;\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const validationErrors = validate();\n    if (Object.keys(validationErrors).length > 0) {\n      setErrors(validationErrors);\n      return;\n    }\n    try {\n      const response = await fetch(\"http://127.0.0.1:5000/register\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          username: formData.username,\n          password: formData.password,\n          confirmPassword: formData.confirmPassword,\n        }),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"Registration successful!\");\n        dispatch(resetForm());\n      } else {\n        setMessage(`Registration failed: ${data.message}`);\n      }\n    } catch (error) {\n      setMessage(`Registration failed: ${error.message}`);\n    }\n  };\n\n  return (\n    <div className=\"register\">\n      <h2>Register</h2>\n      {message && <p>{message}</p>}\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"text\"\n          name=\"username\"\n          label=\"Username\"\n          value={formData.username}\n          onChange={handleChange}\n          error={errors.username}\n        />\n        <FormInput\n          type={passwordVisible ? \"text\" : \"password\"}\n          name=\"password\"\n          label=\"Password\"\n          value={formData.password}\n          onChange={handleChange}\n          error={errors.password}\n          toggleVisibility={() => setPasswordVisible(!passwordVisible)}\n          isPassword\n        />\n        <FormInput\n          type={confirmPasswordVisible ? \"text\" : \"password\"}\n          name=\"confirmPassword\"\n          label=\"Confirm Password\"\n          value={formData.confirmPassword}\n          onChange={handleChange}\n          error={errors.confirmPassword}\n          toggleVisibility={() =>\n            setConfirmPasswordVisible(!confirmPasswordVisible)\n          }\n          isPassword\n        />\n        <Button type=\"submit\" label=\"Register\" />\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}