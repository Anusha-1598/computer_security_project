{"ast":null,"code":"var _jsxFileName = \"/workspaces/computer_security_project/frontend/src/components/RenamePopup.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateDocumentName } from \"../redux/documentsSlice\";\nimport \"./Popup.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RenamePopup = ({\n  fileId,\n  fileName,\n  onClose\n}) => {\n  _s();\n  const currentUser = useSelector(state => state.login.loginUser);\n  const [newName, setNewName] = useState(fileName);\n  const dispatch = useDispatch();\n  const handleRename = () => {\n    fetch(\"http://127.0.0.1:3658/m1/593636-0-default/renameDocument\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\"\n      },\n      body: JSON.stringify({\n        userId: currentUser,\n        fileId: fileId\n      })\n    }).then(res => {\n      if (res.status === 200) {\n        res.json().then(res => {\n          dispatch(updateDocumentName({\n            fileId,\n            newName\n          }));\n        });\n      } else {\n        alert(res.message);\n      }\n      onClose();\n    }).catch(err => {\n      alert(\"Failed to rename document due to : \\n\" + err.message);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"popup-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rename Document\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: newName,\n        onChange: e => setNewName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), newName.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: \"File name not be Empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRename,\n        children: \"Rename\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RenamePopup, \"Ilt5T+YGWt32Si4kRZ+ZJ5kD448=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = RenamePopup;\nexport default RenamePopup;\nvar _c;\n$RefreshReg$(_c, \"RenamePopup\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","updateDocumentName","jsxDEV","_jsxDEV","Fragment","_Fragment","RenamePopup","fileId","fileName","onClose","_s","currentUser","state","login","loginUser","newName","setNewName","dispatch","handleRename","fetch","method","credentials","headers","Accept","body","JSON","stringify","userId","then","res","status","json","alert","message","catch","err","className","children","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","length","onClick","_c","$RefreshReg$"],"sources":["/workspaces/computer_security_project/frontend/src/components/RenamePopup.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateDocumentName } from \"../redux/documentsSlice\";\nimport \"./Popup.css\";\n\nconst RenamePopup = ({ fileId, fileName, onClose }) => {\n  const currentUser = useSelector((state) => state.login.loginUser);\n  const [newName, setNewName] = useState(fileName);\n  const dispatch = useDispatch();\n\n  const handleRename = () => {\n    fetch(\"http://127.0.0.1:3658/m1/593636-0-default/renameDocument\", {\n      method: \"POST\",\n      credentials: \"include\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      body: JSON.stringify({ userId: currentUser, fileId: fileId }),\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          res.json().then((res) => {\n            dispatch(updateDocumentName({ fileId, newName }));\n          });\n        } else {\n          alert(res.message);\n        }\n        onClose();\n      })\n      .catch((err) => {\n        alert(\"Failed to rename document due to : \\n\" + err.message);\n      });\n  };\n\n  return (\n    <div className=\"popup\">\n      <div className=\"popup-inner\">\n        <h2>Rename Document</h2>\n        <input\n          type=\"text\"\n          value={newName}\n          onChange={(e) => setNewName(e.target.value)}\n        />\n        {newName.length === 0 ? (\n          <p className=\"error\">File name not be Empty</p>\n        ) : (\n          <></>\n        )}\n        <button onClick={handleRename}>Rename</button>\n        <button onClick={onClose}>Cancel</button>\n      </div>\n    </div>\n  );\n};\n\nexport default RenamePopup;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,kBAAkB,QAAQ,yBAAyB;AAC5D,OAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAErB,MAAMC,WAAW,GAAGA,CAAC;EAAEC,MAAM;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAMC,WAAW,GAAGX,WAAW,CAAEY,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,SAAS,CAAC;EACjE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAACU,QAAQ,CAAC;EAChD,MAAMS,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAE9B,MAAMmB,YAAY,GAAGA,CAAA,KAAM;IACzBC,KAAK,CAAC,0DAA0D,EAAE;MAChEC,MAAM,EAAE,MAAM;MACdC,WAAW,EAAE,SAAS;MACtBC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,MAAM,EAAE,kBAAkB;QAC1B,6BAA6B,EAAE;MACjC,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAEhB,WAAW;QAAEJ,MAAM,EAAEA;MAAO,CAAC;IAC9D,CAAC,CAAC,CACCqB,IAAI,CAAEC,GAAG,IAAK;MACb,IAAIA,GAAG,CAACC,MAAM,KAAK,GAAG,EAAE;QACtBD,GAAG,CAACE,IAAI,CAAC,CAAC,CAACH,IAAI,CAAEC,GAAG,IAAK;UACvBZ,QAAQ,CAAChB,kBAAkB,CAAC;YAAEM,MAAM;YAAEQ;UAAQ,CAAC,CAAC,CAAC;QACnD,CAAC,CAAC;MACJ,CAAC,MAAM;QACLiB,KAAK,CAACH,GAAG,CAACI,OAAO,CAAC;MACpB;MACAxB,OAAO,CAAC,CAAC;IACX,CAAC,CAAC,CACDyB,KAAK,CAAEC,GAAG,IAAK;MACdH,KAAK,CAAC,uCAAuC,GAAGG,GAAG,CAACF,OAAO,CAAC;IAC9D,CAAC,CAAC;EACN,CAAC;EAED,oBACE9B,OAAA;IAAKiC,SAAS,EAAC,OAAO;IAAAC,QAAA,eACpBlC,OAAA;MAAKiC,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BlC,OAAA;QAAAkC,QAAA,EAAI;MAAe;QAAA7B,QAAA,EAAA8B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBrC,OAAA;QACEsC,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3B,OAAQ;QACf4B,QAAQ,EAAGC,CAAC,IAAK5B,UAAU,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAlC,QAAA,EAAA8B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,EACDzB,OAAO,CAAC+B,MAAM,KAAK,CAAC,gBACnB3C,OAAA;QAAGiC,SAAS,EAAC,OAAO;QAAAC,QAAA,EAAC;MAAsB;QAAA7B,QAAA,EAAA8B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAE/CrC,OAAA,CAAAE,SAAA,mBAAI,CACL,eACDF,OAAA;QAAQ4C,OAAO,EAAE7B,YAAa;QAAAmB,QAAA,EAAC;MAAM;QAAA7B,QAAA,EAAA8B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC9CrC,OAAA;QAAQ4C,OAAO,EAAEtC,OAAQ;QAAA4B,QAAA,EAAC;MAAM;QAAA7B,QAAA,EAAA8B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAhC,QAAA,EAAA8B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC;EAAC;IAAAhC,QAAA,EAAA8B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,EAAA,CAlDIJ,WAAW;EAAA,QACKN,WAAW,EAEdD,WAAW;AAAA;AAAAiD,EAAA,GAHxB1C,WAAW;AAoDjB,eAAeA,WAAW;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}